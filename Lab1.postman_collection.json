{
	"info": {
		"_postman_id": "d9fbba8f-765c-4f53-b327-fe7c285f0abd",
		"name": "Lab1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24186865"
	},
	"item": [
		{
			"name": "Test1. Status code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get?userId=333",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "userId",
							"value": "333"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test2. Response time",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get?userId=333",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "userId",
							"value": "333"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test3. Response size",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is less than 1000b\",function(){\r",
							"    pm.expect(pm.response.responseSize).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get?userId=333",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "userId",
							"value": "333"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test4. User id is 333",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Id user is 333\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.args.userId).to.eql(\"333\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get?userId=333",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "userId",
							"value": "333"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test5. Host is postman-echo.com",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Host is postman-echo.com\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.headers.host).to.eql(\"postman-echo.com\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get?userId=333",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "userId",
							"value": "333"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test6. Check first name for id 7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check first name for id 7\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data[0].first_name).to.eql(\"Michael\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users?page=2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test7. Check length data Array",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check length data Array\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.length).to.eql(6);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/unknown",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test8. Check id and name together",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check id and name together\", function () {\r",
							"\tvar jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data[0].id).to.eql(1);\r",
							"    pm.expect(jsonData.data[0].name).to.eql(\"cerulean\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/unknown",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test9. Check keys in data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check keys in data\", function () {\r",
							"\tvar jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.any.keys(\"total_pages\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/unknown",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test10. Is data empty?",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Is data empty?\", function () {\r",
							"\tvar jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).not.to.be.empty;\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/unknown",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test11. Check length above data Array",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" pm.test(\"Check length above data Array\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data).length.above(10);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/unknown",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test12. Check status and format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check status and format\", function () {\r",
							"    pm.response.to.be.ok; \r",
							"    pm.response.to.be.json; \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/unknown",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test13. Check header",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check header\", function () {\r",
							"    pm.expect(pm.response.headers.get('Transfer-Encoding')).to.eql('chunked');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/unknown",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test14. Have only one element by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Have only one element by id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.id).to.eql(2);\r",
							"    pm.expect(jsonData).is.not.eql(Array);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test15. Response haven't test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response haven't test\", function(){\r",
							"pm.response.to.not.have.jsonBody(\"test\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 16. Register request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should mark todo as completed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\tpm.expect(jsonData.id).to.eql(4);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/register",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test17. Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete user\", function () {\r",
							"\tpm.expect(pm.response.code).is.eql(204);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "/api/users/2",
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 18. Login succesful",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	]
}